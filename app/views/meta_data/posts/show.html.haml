- meta = post.meta_data

-# TITLE
- title = meta.title.to_s.squish.strip

- if title.blank?
  - title = if post.is_a? Recipe
    - "#{ post.title }, пошаговый рецепт с фото".squish.strip
  - elsif post.is_a? Interview
    - "#{ post.title }, Интервью".squish.strip
  - else
    - "#{ post.title }, Открытая Кухня Анны Нечаевой OPEN-COOK.RU".squish.strip

-# DESCRIPTION
- descr = meta.description.to_s.squish.strip
- descr = descr.present? ? descr : Sanitize.clean(post.intro.to_s).squish.strip[0..180]

-# KEYWORDS
- keywords  = meta.keywords.to_s.squish.strip.gsub(/\s*,\s*/, ',')
- keywords  = keywords.present? ? keywords : [ post.inline_tags ].join(',').squish.strip.gsub(/\s*,\s*/, ',')

-# AUTHOR
- author = meta.author
- author = author.present? ? meta.author : "OPEN-COOK.RU Открытая Кухня Анны Нечаевой"

-# TIME format
- tshift   = post.created_at.strftime("%z")
- tshift   = [ tshift[0..2], tshift[3..4] ].join(':')
- pub_time = post.created_at.strftime("%FT%R:%S#{ tshift }")
- mod_time = post.updated_at.strftime("%FT%R:%S#{ tshift }")

-# OG: IMAGE
- og_image = post.main_image.present? ? image_url(post.main_image.url(:original)) : nil
- og_image = meta.og_image.present?   ? meta.og_image : og_image

-# OG: TITLE, DESCRIPTION, SITE NAME, TYPE, URL
- og_title = meta.og_title.present?       ? meta.og_title       : title
- og_descr = meta.og_description.present? ? meta.og_description : descr
- og_sname = meta.og_site_name.present?   ? meta.og_site_name   : 'OPEN-COOK.RU'
- og_type  = meta.og_type.present?        ? meta.og_type        : 'article'
- og_url   = meta.og_url.present?         ? meta.og_url         : request.original_url

-# =============== MAIN ===============
- content_for :title do
  = title

%meta{ name: :author,      content: author.strip   }
%meta{ name: :keywords,    content: keywords.strip }
%meta{ name: :description, content: descr.strip    }
-# =============== MAIN ===============

-# =============== OPEN GRAPH ===============
-# http://ogp.me/#no_vertical

- if og_image.present?
  %meta{ property: "og:image", content: og_image.strip }

%meta{ property: "og:title",       content: og_title.strip }
%meta{ property: "og:description", content: og_descr.strip }
%meta{ property: "og:site_name",   content: og_sname.strip }

%meta{ property: "og:author",  content: author }

%meta{ itemprop: :name, content: author }
%meta{ property: "og:type", content: og_type.strip }
%meta{ property: "og:url",  content: og_url.strip, itemprop: :url }
%meta{ property: "#{ og_type.strip }:Section", content: post.hub.title.strip }
%meta{ property: "#{ og_type.strip }:Name", content: og_title.strip }

%meta{ property: "#{ og_type.strip }:published_time", content: pub_time }
%meta{ property: "#{ og_type.strip }:modified_time",  content: mod_time }

- keywords.split(',').each do |tag|
  %meta{ property: "#{ og_type.strip }:tag", content: tag.to_s.strip.strip }
-# =============== OPEN GRAPH ===============

- content_for :article_microdata do
  %div{ style: 'position:absolute;top:0;left:0;width:1px;height:1px;overflow:hidden;' }
    - micro_data = { "@context" => "http://schema.org", "@type" => "Article", author: author, name: og_title.strip }
    %script{ type: 'application/ld+json' }= raw micro_data.to_json
    %article{ style: 'position:absolute;top:10px;left:10px;', itemscope: true, itemtype: 'http://schema.org/Article' }
      - if og_image.present?
        = image_tag og_image, itemprop: :image
      %meta{ itemprop: :url,    content: og_url }
      %span{ itemprop: :author, content: author }= author
      %span{ itemprop: :name, name: :name,  content: og_title.strip }= og_title.strip
      %span{ itemprop: 'article:name', content: og_title.strip }= og_title.strip
      %span{ itemprop: :description }= og_descr.strip
